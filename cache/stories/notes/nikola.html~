
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">First steps</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1">Initialize the site</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Type the following at the command line to initialize a new Nikola
site:
</p>

<div class="highlight"><pre>nikola init site_name
</pre></div>

<p>
Answer the questions to setup the initial site. Be sure the base
URL ends in '/'.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2">Set the theme to oldfashioned with a color scheme from bootswatch</h3>
<div class="outline-text-3" id="text-1-2">
<p>
First, install the olfashioned theme from the themes repository.
</p>

<div class="highlight"><pre>nikola install_theme oldfashioned
</pre></div>

<p>
Next, change the color scheme to slate from bootswatch.com.
</p>

<div class="highlight"><pre>nikola bootswatch_theme -n custom_theme -s slate -p oldfashioned
</pre></div>

<p>
Finally, change the theme variable to <i>custom<sub>theme</sub></i> inside
conf.py.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3">Install and configure the org-mode plugin</h3>
<div class="outline-text-3" id="text-1-3">
<p>
Nikola can compile org-mode files using a custom
plugin. Information on the plugin can be found here:
<a href="http://plugins.getnikola.com/#orgmode">http://plugins.getnikola.com/#orgmode</a>. To install the plugin for my
site, I ran the following command from inside my site directory:
</p>

<div class="highlight"><pre>nikola plugin -i orgmode
</pre></div>

<p>
This created a folder called <i>plugins</i> inside the site directory
containing the orgmode plugin files. The most important file is
init.el.
</p>

<p>
Next, I had to add the org-mode compiler to the COMPILERS
dictionary in conf.py:
</p>

<div class="highlight"><pre><span class="n">COMPILERS</span><span class="p">[</span><span class="s">&quot;orgmode&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="s">&#39;.org&#39;</span><span class="p">,)</span>
</pre></div>

<p>
Note that I manually edited the COMPILERS dictionary to add the
key-value pair; I did not actually add to the dictionary with the
code above. 
</p>

<p>
I also had to modify my POSTS and PAGES variables in
conf.py to read .org files:
</p>

<div class="highlight"><pre><span class="n">POSTS</span> <span class="o">=</span> <span class="n">POSTS</span> <span class="o">+</span> <span class="p">((</span><span class="s">&quot;posts/*.org&quot;</span><span class="p">,</span> <span class="s">&quot;posts&quot;</span><span class="p">,</span> <span class="s">&quot;post.tmpl&quot;</span><span class="p">),)</span>
<span class="n">PAGES</span> <span class="o">=</span> <span class="n">PAGES</span> <span class="o">+</span> <span class="p">((</span><span class="s">&quot;stories/*.org&quot;</span><span class="p">,</span> <span class="s">&quot;posts&quot;</span><span class="p">,</span> <span class="s">&quot;post.tmpl&quot;</span><span class="p">),)</span>
</pre></div>

<p>
To create a post using org-mode, I need to enter the following code
at the top of the org-file in a comments section:
</p>

<div class="highlight"><pre>#+BEGIN_COMMENT
.. title:
.. slug: 
.. date: 
.. tags: 
.. link:
.. description:
.. type: text
#+END_COMMENT
</pre></div>


<hr  />
</div>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">Customization</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1">Navigation links</h3>
<div class="outline-text-3" id="text-2-1">
<p>
You can edit what navigation links appear by changing the
NAVIGATION LINKS variable in conf.py. See this section of the
handbook: <a href="http://getnikola.com/handbook.html#configuration">http://getnikola.com/handbook.html#configuration</a>
</p>
</div>
</div>
</div>
