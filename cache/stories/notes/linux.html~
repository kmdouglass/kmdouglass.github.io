<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Notes on Linux</a></li>
<li><a href="#sec-2">2. Why install Debian?</a></li>
<li><a href="#sec-3">3. Debian installation from a live USB stick</a>
<ul>
<li><a href="#sec-3-1">3.1. Downloading the .iso image files</a></li>
<li><a href="#sec-3-2">3.2. Copy the .iso file to a USB stick</a></li>
<li><a href="#sec-3-3">3.3. Installing Debian</a></li>
</ul>
</li>
<li><a href="#sec-4">4. Initial Debian Configuration</a>
<ul>
<li><a href="#sec-4-1">4.1. List of required software</a></li>
<li><a href="#sec-4-2">4.2. WiFi</a>
<ul>
<li><a href="#sec-4-2-1">4.2.1. Adding non-free repositories</a></li>
<li><a href="#sec-4-2-2">4.2.2. Installing non-free wireless drivers</a></li>
<li><a href="#sec-4-2-3">4.2.3. Configuring WiFi</a></li>
</ul>
</li>
<li><a href="#sec-4-3">4.3. Installing emacs on Debian</a>
<ul>
<li><a href="#sec-4-3-1">4.3.1. Configuring auto-complete</a></li>
</ul>
</li>
<li><a href="#sec-4-4">4.4. Setting the keyboard layout to international</a></li>
<li><a href="#sec-4-5">4.5. Changing the Caps Lock key to function as Control</a></li>
<li><a href="#sec-4-6">4.6. Running Dropbox on startup</a></li>
<li><a href="#sec-4-7">4.7. Remove the XFCE bottom panel</a></li>
<li><a href="#sec-4-8">4.8. Installing Flash</a></li>
<li><a href="#sec-4-9">4.9. Playing DVD's in VLC</a></li>
<li><a href="#sec-4-10">4.10. Activating the Firefox Java Plugin</a></li>
<li><a href="#sec-4-11">4.11. Latex installation</a></li>
<li><a href="#sec-4-12">4.12. Automatic Backups with rsync and cron</a></li>
<li><a href="#sec-4-13">4.13. Install Microsoft Core Fonts</a></li>
</ul>
</li>
<li><a href="#sec-5">5. Monitor settings</a>
<ul>
<li><a href="#sec-5-1">5.1. Dual monitors</a></li>
<li><a href="#sec-5-2">5.2. Screen brightness</a></li>
</ul>
</li>
<li><a href="#sec-6">6. Python setup</a>
<ul>
<li><a href="#sec-6-1">6.1. Compiling Python 3.4</a></li>
<li><a href="#sec-6-2">6.2. Installing IPython 2.0</a>
<ul>
<li><a href="#sec-6-2-1">6.2.1. IPython Notebook</a></li>
<li><a href="#sec-6-2-2">6.2.2. Fixing indentation errors</a></li>
</ul>
</li>
<li><a href="#sec-6-3">6.3. Installing Numpy 1.8.1, matplotlib 1.3.1, scipy 0.14, and Pillow 2.4.0</a></li>
<li><a href="#sec-6-4">6.4. Multiple IPython prompts at startup</a></li>
<li><a href="#sec-6-5">6.5. Getting Tk and Latex support in Python</a></li>
<li><a href="#sec-6-6">6.6. Installing Jedi</a></li>
</ul>
</li>
<li><a href="#sec-7">7. Org-mode configuration</a>
<ul>
<li><a href="#sec-7-1">7.1. Publish to LaTeX with references</a></li>
</ul>
</li>
<li><a href="#sec-8">8. CIFS</a>
<ul>
<li><a href="#sec-8-1">8.1. CIFS installation</a></li>
<li><a href="#sec-8-2">8.2. Accessing Windows shares remotely</a></li>
<li><a href="#sec-8-3">8.3. fstab options for mounting shares as a user</a></li>
</ul>
</li>
<li><a href="#sec-9">9. Booting from a bootloader on a USB stick</a>
<ul>
<li><a href="#sec-9-1">9.1. Installing GRUB onto a USB stick</a></li>
<li><a href="#sec-9-2">9.2. Configuring GRUB on the USB stick to work with your machine</a></li>
</ul>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Notes on Linux</h2>
<div class="outline-text-2" id="text-1">
<p>
This page serves as a collection of notes I've made while using
Linux. It's meant to be a resource to help others and myself when
performing common tasks in the Linux operating system. Let me know
if it helps you in any way!
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Why install Debian?</h2>
<div class="outline-text-2" id="text-2">
<p>
For the last five or six years, I have been using Ubuntu at home,
and sometimes at the office. (I'm writing this in 2014, a few months
after I finished my PhD studies.) I've liked it quite a bit and
learned a lot from it because it is a relatively gentle introduction
to Linux.
</p>

<p>
Lately I've become a bored with it however. I also get a vague
feeling that it's becoming a bit bloated. At home, I mainly use
emacs, Firefox, Anki (a flashcard program), and Python along with
its many associated packages. I don't therefore need a large
operating system. Now, I know that there are lightweight versions of
Ubuntu, but at this point I'm really just interested in trying
something else.
</p>

<p>
So, I decided to give Debian a try. Ubuntu is based on Debian, but
so far as I can tell Debian has remained closer to the open source
paradigm. Furthermore, Debian is actively developed and very mature.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Debian installation from a live USB stick</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Downloading the .iso image files</h3>
<div class="outline-text-3" id="text-3-1">
<p>
<i>File: debian-live-7.4-amd64-xfce-desktop.iso.torrent</i>
<i>Location: <a href="http://cdimage.debian.org/debian-cd/current-live/amd64/bt-hybrid/">http://cdimage.debian.org/debian-cd/current-live/amd64/bt-hybrid/</a></i>
</p>

<p>
I want to use a light-weight desktop environment. For lack of
experience in the matter and any strong opinion, I settled on Xfce,
though Debian also has a flavor that comes with LXDE.
</p>

<p>
I downloaded Debian 7.4 live image torrent coupled with the Xfce
desktop from Debian's site. They recommend using the torrent since
it reduces load on their servers.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> Copy the .iso file to a USB stick</h3>
<div class="outline-text-3" id="text-3-2">
<p>
<i>Information sources</i>
</p>
<ol class="org-ol">
<li><a href="https://www.debian.org/releases/stable/amd64/ch04s03.html.en/">https://www.debian.org/releases/stable/amd64/ch04s03.html.en/</a>
</li>
<li><a href="https://www.debian.org/CD/faq/#write-usb">https://www.debian.org/CD/faq/#write-usb</a>
</li>
</ol>

<p>
Surprisingly, the first website above suggested that <i>should</i> be
able boot the image simply by copying it to a USB stick. Of course,
I have to enable booting from USB in my BIOS.  First, I verified
the device name of the USB by inserting it and entering the <i>dmesg</i>
command in a shell. The kernel buffer reported detecting the USB
stick as the latest message. On my machine, it is labeled as
<code>/dev/sdb/</code>.
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">cp</span> <span class="n">Downloads</span><span class="o">/</span><span class="n">debian</span><span class="o">-</span><span class="n">live</span><span class="o">-</span>7<span class="p">.</span>4<span class="o">-</span><span class="n">amd64</span><span class="o">-</span><span class="n">xfce</span><span class="o">-</span><span class="n">desktop</span><span class="p">.</span><span class="n">iso</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">sdb</span><span class="p">;</span> <span class="n">sync</span>
</pre></div>

<p>
Note that sometimes there are multiple devices that appear in
<code>/dev/</code> that relate to your device. For example, in my Ubuntu 12.04
system, there is a <code>/dev/sdb</code> and <code>/dev/sdb1</code> even though, to my
knowledge, only one partition exists. My computer could not load
the image when it was copied to <code>/dev/sdb1</code> but it did boot when
copied to <code>/dev/sdb</code>. You should also be sure that the USB stick is
not mounted and you should not try to <i>cp</i> to its mount point, such
as <code>/media/USB20FS/</code>.
</p>

<p>
Finally, you may need to partition the stick to a FAT16 or FAT32
file system. I used FAT16.
</p>

<p>
I ensured that I was capable of booting from USB in my BIOS by
pressing <i>F2</i> at the BIOS boot screen (I'm using a Lenovo Ideapad
Y570.). I enabled USB booting in the <i>Configuration</i> tab and moved
the USB boot priority over the harddisks in the <i>Boot</i>
tab.
</p>

<p>
The computer was capable of booting Debian from the USB stick after
this.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> Installing Debian</h3>
<div class="outline-text-3" id="text-3-3">
<p>
I used the graphical installer provided by the system on the live
USB stick. Before doing so, I had repartitioned my harddrive using
Windows Disk Management. The first three primary partitions were
the boot partition, the Windows system partition (C:\), and a
partition that contained software from Lenovo (D:\). The very last
partition on the harddrive was also placed there by Lenovo and I
think contains Windows restore files.
</p>

<p>
I shrunk the the D:\ volume down to 20 GB in Windows, which was
more than enough space for the Lenovo software. Then, in the Debian
installer, I added a 150 GB partion for <code>/home</code>, an 8.8 GB swap
space partition, and finally I allotted 35 GB to <code>/</code>. I placed
these between the partition containing the D:\ volume and the final
OEM partitions . This left 35 GB free in case I decide to install
another distribution in the future.
</p>

<p>
The rest of the graphical installer worked well, including the
installation of the <a href="http://www.gnu.org/software/grub/">Grub</a> bootloader. Upon rebooting, the Grub menu
allowed me to boot into Debian or Windows 7.
</p>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Initial Debian Configuration</h2>
<div class="outline-text-2" id="text-4">
<p>
A lot of my initial configuration is of the desktop environment. One
especially useful set of tips for setting up XFCE is here:
<a href="http://www.binarytides.com/better-fedora-20-xfce/">http://www.binarytides.com/better-fedora-20-xfce/</a>
</p>

<hr  />
</div>

<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> List of required software</h3>
<div class="outline-text-3" id="text-4-1">
<p>
I use the following software packages regularly, so they should be
installed after any fresh OS installation.
</p>

<ol class="org-ol">
<li>emacs (w/org-mode)
</li>
<li>Dropbox
</li>
<li>Python (w/numpy, scipy, and matplotlib)
</li>
<li>Firefox (w/XMarks)
</li>
<li>KeepassX
</li>
<li>TrueCrypt
</li>
<li>Inkscape
</li>
</ol>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> WiFi</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Unfortunately, my wireless card doesn't work without some setup in
Debian. The drivers for the wireless are non-free, which means that
they don't adhere to Debian's open source policy.
</p>

<hr  />
</div>

<div id="outline-container-sec-4-2-1" class="outline-4">
<h4 id="sec-4-2-1"><span class="section-number-4">4.2.1</span> Adding non-free repositories</h4>
<div class="outline-text-4" id="text-4-2-1">
<p>
<i>Information sources</i>
</p>
<ol class="org-ol">
<li><a href="http://forums.debian.net/viewtopic.php?f=10&t=63380">http://forums.debian.net/viewtopic.php?f=10&t=63380</a>
</li>
</ol>

<p>
To add non-free repositories to the Debian package manager, I had
to edit the <code>/etc/apt/sources.list</code> file. In this file, there will
be a lines that correspond to different servers, one of which will
be the server for the primary packages. At the end of this line, I
added <i>non-free</i>. This should add the non-free packages to
aptitude's search. There may be other options such as <i>main</i>, which
include the primary packages. These should be left in place.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-2-2" class="outline-4">
<h4 id="sec-4-2-2"><span class="section-number-4">4.2.2</span> Installing non-free wireless drivers</h4>
<div class="outline-text-4" id="text-4-2-2">
<p>
<i>Information sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.overclock.net/t/1477672/debian-lenovo-y570-no-wifi-solve">http://www.overclock.net/t/1477672/debian-lenovo-y570-no-wifi-solve</a>
</li>
</ol>

<p>
I installed the following packages containing drivers for my
wireless card: <i>firmware-brcm80211</i> and <i>iwlwifi</i>. I've found sites
that either only one or both are needed, and I'm not sure if I
really need both.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-2-3" class="outline-4">
<h4 id="sec-4-2-3"><span class="section-number-4">4.2.3</span> Configuring WiFi</h4>
<div class="outline-text-4" id="text-4-2-3">
<p>
<i>Information sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.overclock.net/t/1477672/debian-lenovo-y570-no-wifi-solve">http://www.overclock.net/t/1477672/debian-lenovo-y570-no-wifi-solve</a>
</li>
<li><a href="https://bbs.archlinux.org/viewtopic.php?pid=1141454">https://bbs.archlinux.org/viewtopic.php?pid=1141454</a>
</li>
<li><a href="http://forums.debian.net/viewtopic.php?f=5&t=73778">http://forums.debian.net/viewtopic.php?f=5&t=73778</a>
</li>
</ol>

<p>
The following commands are very important for configuring the WiFi
in Debian. (See source 3 above.)
</p>

<dl class="org-dl">
<dt> ifconfig </dt><dd>enables the wireless device
</dd>
<dt> iwlist </dt><dd>lists available wireless access points
</dd>
<dt> iwconfig </dt><dd>configures the wireless connection
</dd>
<dt> dhclient </dt><dd>get an IP address via dhcp
</dd>
<dt> ifup </dt><dd>activiates the wireless interface
</dd>
<dt> ifdown </dt><dd>deactivates the wireless interface
</dd>
</dl>

<p>
<i>iwlist</i> is the equivalent of the Windows menu that displays the
available networks. It also lists other important information
regarding the nearby wireless networks.
</p>

<p>
The <code>/etc/network/interfaces</code> file stores wireless networks to
connect to automatically. In this file, add the following lines to
add a network:
</p>

<div class="highlight"><pre><span class="n">auto</span> <span class="n">wlan0</span>
<span class="n">iface</span> <span class="n">wlan0</span> <span class="n">inet</span> <span class="n">dhcp</span>
<span class="n">wpa</span><span class="o">-</span><span class="n">ssid</span> <span class="n">mynetwork</span>
<span class="n">wpa</span><span class="o">-</span><span class="n">psk</span> <span class="n">password</span>
</pre></div>

<p>
Finally, use the program <i>rfkill</i> to report the identity of the
hard and soft switches for devices like WiFi. I may need to press a
Function-F&lt;num&gt; key combination to activate the WiFi as well.
</p>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> Installing emacs on Debian</h3>
<div class="outline-text-3" id="text-4-3">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.emacswiki.org/emacs/EmacsSnapshotAndDebian">http://www.emacswiki.org/emacs/EmacsSnapshotAndDebian</a>
</li>
</ol>

<p>
I can get the latest emacs source files from the emacs git
repository. Use the command
</p>

<div class="highlight"><pre><span class="n">git</span> <span class="n">clone</span> <span class="o">--</span><span class="n">depth</span> 1 <span class="n">git</span><span class="p">:</span><span class="o">//</span><span class="n">git</span><span class="p">.</span><span class="n">sv</span><span class="p">.</span><span class="n">gnu</span><span class="p">.</span><span class="n">org</span><span class="o">/</span><span class="n">emacs</span><span class="p">.</span><span class="n">git</span>
</pre></div>

<p>
to clone the repository. I installed the required packages, then
built the binaries as instructed. Note that I built emacs in
<code>~/opt/emacs-2014-04-13/</code> and made a symbolic link to the binaries
for this build in <code>/usr/bin</code>.
</p>

<hr  />
</div>

<div id="outline-container-sec-4-3-1" class="outline-4">
<h4 id="sec-4-3-1"><span class="section-number-4">4.3.1</span> Configuring auto-complete</h4>
<div class="outline-text-4" id="text-4-3-1">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://cx4a.org/software/auto-complete/manual.html#Manual_Installation">http://cx4a.org/software/auto-complete/manual.html#Manual_Installation</a>
</li>
<li><a href="http://www.jesshamrick.com/2012/09/18/emacs-as-a-python-ide/">http://www.jesshamrick.com/2012/09/18/emacs-as-a-python-ide/</a>
</li>
</ol>

<p>
A long time ago I followed <a href="http://www.jesshamrick.com/2012/09/18/emacs-as-a-python-ide/">Jess Hamrick's guide</a> for configuring
emacs for Python. This first exposed me to auto-complete, a useful
tool for automatically completing words as you type them. However,
I found that its configuration requires a few extra steps to get
working.
</p>

<p>
For one, I manually created the <i>ac-dict</i> file that's mentioned in
the lines of code that are added to the init.el file. I also found
that the letters 'AC' must be in the mode-line in Emacs. If
they're not, type <i>M-x auto-mode-complete</i> to get it working.
</p>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-4-4" class="outline-3">
<h3 id="sec-4-4"><span class="section-number-3">4.4</span> Setting the keyboard layout to international</h3>
<div class="outline-text-3" id="text-4-4">
<p>
Understanding how the keyboard configuration works is one of the
most mysterious things to me in Linux and Xfce. Fortunately I at
least determined how to set the keyboard to a US International
layout. This is important because I live in French-speaking
Switzerland and frequently need to use a number of accent keys.
</p>

<p>
To switch the keyboard, I right-clicked on the desktop to bring up
the menu. I navigated to <code>Applications -&gt; Settings -&gt; Keyboard</code>. In
this window, I selected the Layout tab. I clicked the "Add" button,
then selected <code>English (US) -&gt; English (international AltGr dead
  keys)</code>, which is my preferred international layout. I also removed
the original keyboard layout after adding the international one.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-5" class="outline-3">
<h3 id="sec-4-5"><span class="section-number-3">4.5</span> Changing the Caps Lock key to function as Control</h3>
<div class="outline-text-3" id="text-4-5">
<p>
I usually change the Caps Lock key to Control since it makes typing
in emacs much easier.
</p>

<p>
To swap the keys in Xfce, right click on the Desktop and navigate
to <code>Applications -&gt; Settings -&gt; Session and Startup</code>. In window,
click on the <code>Application Autostart</code> tab and click the "Add"
button.
</p>

<p>
In the prompt, enter the following information:
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Field Name</th>
<th scope="col" class="left">Option</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">Name</td>
<td class="left">Caps Lock &lt;-&gt; Control</td>
</tr>

<tr>
<td class="left">Description</td>
<td class="left">Change Caps Lock to Control</td>
</tr>

<tr>
<td class="left">Command</td>
<td class="left">/usr/bin/setxkbmap -option '' -option 'ctrl:nocaps'</td>
</tr>
</tbody>
</table>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-6" class="outline-3">
<h3 id="sec-4-6"><span class="section-number-3">4.6</span> Running Dropbox on startup</h3>
<div class="outline-text-3" id="text-4-6">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.ghacks.net/2009/04/04/get-to-know-linux-the-etcinitd-directory/">http://www.ghacks.net/2009/04/04/get-to-know-linux-the-etcinitd-directory/</a>
</li>
<li><a href="http://pixeldust.wikidot.com/linode-setup:dropbox">http://pixeldust.wikidot.com/linode-setup:dropbox</a>
</li>
<li><a href="http://help.directadmin.com/item.php?id=379">http://help.directadmin.com/item.php?id=379</a>
</li>
</ol>

<p>
For whatever reason, I couldn't seem to get Dropbox to start after
the system boots through the XFCE GUI. To fix this, I added a
service script called <b>/etc/init.d/dropbox</b> that I found at one of
the sources above. I needed to add the recommended special tags to
avoid an insserv error. The script looks like this:
</p>

<div class="highlight"><pre><span class="c">### BEGIN INIT INFO</span>
<span class="c"># Provides:          dropbox</span>
<span class="c"># Required-Start:    $local_fs $network</span>
<span class="c"># Required-Stop:     $local_fs</span>
<span class="c"># Default-Start:     2 3 4 5</span>
<span class="c"># Default-Stop:      0 1 6</span>
<span class="c"># Short-Description: Dropbox</span>
<span class="c"># Description:       Dropbox daemon</span>
<span class="c">### END INIT INFO</span>

<span class="c"># dropbox service</span>
<span class="n">DROPBOX_USERS</span><span class="p">=</span><span class="s">&quot;kmdouglass&quot;</span>

<span class="n">DAEMON</span><span class="p">=.</span><span class="n">dropbox</span><span class="o">-</span><span class="n">dist</span><span class="o">/</span><span class="n">dropbox</span>

<span class="n">start</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">echo</span> <span class="s">&quot;Starting dropbox...&quot;</span>
    <span class="k">for</span> <span class="n">dbuser</span> <span class="n">in</span> $<span class="n">DROPBOX_USERS</span><span class="p">;</span> <span class="k">do</span>
        <span class="n">HOMEDIR</span><span class="p">=</span>`<span class="n">getent</span> <span class="n">passwd</span> $<span class="n">dbuser</span> <span class="o">|</span> <span class="nb">cut</span> <span class="o">-</span><span class="n">d</span><span class="p">:</span> <span class="o">-</span><span class="n">f6</span>`
        <span class="k">if</span> <span class="p">[</span> <span class="o">-</span><span class="n">x</span> $<span class="n">HOMEDIR</span><span class="o">/</span>$<span class="n">DAEMON</span> <span class="p">];</span> <span class="n">then</span>
            <span class="n">HOME</span><span class="p">=</span><span class="s">&quot;$HOMEDIR&quot;</span> <span class="n">start</span><span class="o">-</span><span class="n">stop</span><span class="o">-</span><span class="n">daemon</span> <span class="o">-</span><span class="n">b</span> <span class="o">-</span><span class="n">o</span> <span class="o">-</span><span class="n">c</span> $<span class="n">dbuser</span> <span class="o">-</span><span class="n">S</span> <span class="o">-</span><span class="n">u</span> $<span class="n">dbuser</span> <span class="o">-</span><span class="n">x</span> $<span class="n">HOMEDIR</span><span class="o">/</span>$<span class="n">DAEMON</span>
        <span class="n">fi</span>
    <span class="n">done</span>
<span class="p">}</span>

<span class="n">stop</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">echo</span> <span class="s">&quot;Stopping dropbox...&quot;</span>
    <span class="k">for</span> <span class="n">dbuser</span> <span class="n">in</span> $<span class="n">DROPBOX_USERS</span><span class="p">;</span> <span class="k">do</span>
        <span class="n">HOMEDIR</span><span class="p">=</span>`<span class="n">getent</span> <span class="n">passwd</span> $<span class="n">dbuser</span> <span class="o">|</span> <span class="nb">cut</span> <span class="o">-</span><span class="n">d</span><span class="p">:</span> <span class="o">-</span><span class="n">f6</span>`
        <span class="k">if</span> <span class="p">[</span> <span class="o">-</span><span class="n">x</span> $<span class="n">HOMEDIR</span><span class="o">/</span>$<span class="n">DAEMON</span> <span class="p">];</span> <span class="n">then</span>
            <span class="n">start</span><span class="o">-</span><span class="n">stop</span><span class="o">-</span><span class="n">daemon</span> <span class="o">-</span><span class="n">o</span> <span class="o">-</span><span class="n">c</span> $<span class="n">dbuser</span> <span class="o">-</span><span class="n">K</span> <span class="o">-</span><span class="n">u</span> $<span class="n">dbuser</span> <span class="o">-</span><span class="n">x</span> $<span class="n">HOMEDIR</span><span class="o">/</span>$<span class="n">DAEMON</span>
        <span class="n">fi</span>
    <span class="n">done</span>
<span class="p">}</span>

<span class="n">status</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">for</span> <span class="n">dbuser</span> <span class="n">in</span> $<span class="n">DROPBOX_USERS</span><span class="p">;</span> <span class="k">do</span>
        <span class="n">dbpid</span><span class="p">=</span>`<span class="n">pgrep</span> <span class="o">-</span><span class="n">u</span> $<span class="n">dbuser</span> <span class="n">dropbox</span>`
        <span class="k">if</span> <span class="p">[</span> <span class="o">-</span><span class="n">z</span> $<span class="n">dbpid</span> <span class="p">]</span> <span class="p">;</span> <span class="n">then</span>
            <span class="n">echo</span> <span class="s">&quot;dropboxd for USER $dbuser: not running.&quot;</span>
        <span class="k">else</span>
            <span class="n">echo</span> <span class="s">&quot;dropboxd for USER $dbuser: running (pid $dbpid)&quot;</span>
        <span class="n">fi</span>
    <span class="n">done</span>
<span class="p">}</span>

<span class="k">case</span> <span class="s">&quot;$1&quot;</span> <span class="n">in</span>
  <span class="n">start</span><span class="p">)</span>
    <span class="n">start</span>
    <span class="p">;;</span>

  <span class="n">stop</span><span class="p">)</span>
    <span class="n">stop</span>
    <span class="p">;;</span>

  <span class="n">restart</span><span class="o">|</span><span class="n">reload</span><span class="o">|</span><span class="n">force</span><span class="o">-</span><span class="n">reload</span><span class="p">)</span>
    <span class="n">stop</span>
    <span class="n">start</span>
    <span class="p">;;</span>

  <span class="n">status</span><span class="p">)</span>
    <span class="n">status</span>
    <span class="p">;;</span>

  <span class="o">*</span><span class="p">)</span>
    <span class="n">echo</span> <span class="s">&quot;Usage: /etc/init.d/dropbox {start|stop|reload|force-reload|restart|status}&quot;</span>
    <span class="nb">exit</span> 1

<span class="n">esac</span>

<span class="nb">exit</span> 0
</pre></div>

<p>
Next, I ran the following commands:
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">init</span><span class="p">.</span><span class="n">d</span><span class="o">/</span><span class="n">dropbox</span> 
<span class="n">sudo</span> <span class="n">update</span><span class="o">-</span><span class="n">rc</span><span class="p">.</span><span class="n">d</span> <span class="n">dropbox</span> <span class="n">defaults</span>
</pre></div>

<p>
The first command ensures that the script can be executed, and I
believe that the second creates the symlinks to the script in the
appropriate run-level folders inside <b><i>etc</i></b>.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-7" class="outline-3">
<h3 id="sec-4-7"><span class="section-number-3">4.7</span> Remove the XFCE bottom panel</h3>
<div class="outline-text-3" id="text-4-7">
<p>
I don't like how much space the XFCE bottom panel takes up, so I
removed it by right-clicking on the desktop and navigating to
<b>Applications -&gt; Settings -&gt; Panel</b>. I selected <b>Panel 2</b> from
drop-down list and clicked the Minus sign. A dialog appeared asking
if I really wanted to remove the lower panel.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-4-8" class="outline-3">
<h3 id="sec-4-8"><span class="section-number-3">4.8</span> Installing Flash</h3>
<div class="outline-text-3" id="text-4-8">
<p>
<i>Information sources</i>
</p>
<ol class="org-ol">
<li><a href="https://wiki.debian.org/FlashPlayer">https://wiki.debian.org/FlashPlayer</a>
</li>
</ol>

<p>
I installed Adobe Flash by adding "contrib" to the list of primary
repositories in <code>/etc/apt/sources.list</code>. Then I ran the commands
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
<span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">flashplugin</span><span class="o">-</span><span class="n">nonfree</span>
</pre></div>

<p>
After a browser restart, I could see Flash videos on webpages.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-4-9" class="outline-3">
<h3 id="sec-4-9"><span class="section-number-3">4.9</span> Playing DVD's in VLC</h3>
<div class="outline-text-3" id="text-4-9">
<p>
Most DVD's are write-protected and need a special package to play
in VLC on Linux. This package is called <b>libdvdcss2</b> in Debian.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-4-10" class="outline-3">
<h3 id="sec-4-10"><span class="section-number-3">4.10</span> Activating the Firefox Java Plugin</h3>
<div class="outline-text-3" id="text-4-10">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.oracle.com/technetwork/java/javase/manual-plugin-install-linux-136395.html">http://www.oracle.com/technetwork/java/javase/manual-plugin-install-linux-136395.html</a>
</li>
</ol>

<p>
To enable Java in Firefox, I first installed the runtime
environment by downloading it from Oracle's website. (I downloaded
the 64 bit Java SE 8u20 tar file.) After unpacking the file, I
created a symbolic link from
<b>~/src/jre1.8.0_11/lib/amd64/libnpjp2.so</b> to
<b>~/.mozilla/plugins/libnpjp2.so</b>.
</p>

<p>
Next, I restarted Iceweaseal (Debian's Firefox) and navigated to
<i>Tools-&gt;Add-ons-&gt;Plugins</i> to ensure that the Java plugin appeared
and was set to "Always Activate."
</p>

<p>
One final step was to decrease the security level of the JRE. This
was accomplished with the Java Control Panel, which is located in
~/src/jre1.8.0_11/bin/. Had I not done this, pratically no applet
would run.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-4-11" class="outline-3">
<h3 id="sec-4-11"><span class="section-number-3">4.11</span> Latex installation</h3>
<div class="outline-text-3" id="text-4-11">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="https://wiki.debian.org/Latex">https://wiki.debian.org/Latex</a>
</li>
<li><a href="http://askubuntu.com/questions/296638/texlive-cant-find-wrapfig-sty-while-package-is-installed">http://askubuntu.com/questions/296638/texlive-cant-find-wrapfig-sty-while-package-is-installed</a>
</li>
</ol>

<p>
Latex is easily installed with <b>sudo apt-get install texlive</b> and
<b>sudo apt-get install texlive-latex-extra</b>.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-4-12" class="outline-3">
<h3 id="sec-4-12"><span class="section-number-3">4.12</span> Automatic Backups with rsync and cron</h3>
<div class="outline-text-3" id="text-4-12">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.howtogeek.com/135533/how-to-use-rsync-to-backup-your-data-on-linux/">http://www.howtogeek.com/135533/how-to-use-rsync-to-backup-your-data-on-linux/</a>
</li>
</ol>

<p>
rsync is a very good command line backup tool for performing
incremental backups. (Note that it works for Windows, though the
creators make no guarantees as to how well it will work.)
</p>

<p>
I can backup my important data using the following command:
</p>

<div class="highlight"><pre><span class="n">rsync</span> <span class="o">-</span><span class="n">av</span> <span class="o">--</span><span class="n">delete</span> <span class="o">/</span><span class="n">Directory1</span><span class="o">/</span> <span class="o">/</span><span class="n">Directory2</span><span class="o">/</span>
</pre></div>

<p>
This command will copy everything in Directory1 recursively,
including symlinks, permissions, etc. into Directory2 (the
a-flag). If files are found in Directory2 that are not in
Directory1, they will be deleted (the &#x2013;delete flag). -v means the
output will be verbose for logging purposes.
</p>

<p>
I setup daily backups with the Linux job scheduler cron. To use
emacs to edit the cron file, I used the command
</p>

<div class="highlight"><pre><span class="n">env</span> <span class="n">EDITOR</span><span class="p">=</span><span class="n">emacs</span> <span class="n">crontab</span> <span class="o">-</span><span class="n">e</span>
</pre></div>

<p>
The <i>env EDITOR=emacs</i> part let me use EMACS and not vi, whereas
the <i>crontab -e</i> part is used to edit the crontab file.
</p>

<p>
Finally, I added the following line in the crontab file to schedule
my backup everyday at 1:00 PM when I'm normally at lunch:
</p>


<div class="highlight"><pre>0 13 <span class="o">*</span> <span class="o">*</span> <span class="o">*</span> <span class="n">rsync</span> <span class="o">-</span><span class="n">av</span> <span class="o">--</span><span class="n">delete</span> <span class="o">/</span><span class="n">Directory1</span><span class="o">/</span> <span class="o">/</span><span class="n">Directory2</span>
</pre></div>

<hr  />
</div>
</div>
<div id="outline-container-sec-4-13" class="outline-3">
<h3 id="sec-4-13"><span class="section-number-3">4.13</span> Install Microsoft Core Fonts</h3>
<div class="outline-text-3" id="text-4-13">
<p>
These fonts are located in the package <b>ttf-mscorefonts-installer</b>.
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">ttf</span><span class="o">-</span><span class="n">mscorefonts</span><span class="o">-</span><span class="n">installer</span>
</pre></div>

<hr  />
</div>
</div>
</div>
<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Monitor settings</h2>
<div class="outline-text-2" id="text-5">
</div><div id="outline-container-sec-5-1" class="outline-3">
<h3 id="sec-5-1"><span class="section-number-3">5.1</span> Dual monitors</h3>
<div class="outline-text-3" id="text-5-1">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://askubuntu.com/questions/62681/how-do-i-setup-dual-monitors-in-xfce">http://askubuntu.com/questions/62681/how-do-i-setup-dual-monitors-in-xfce</a>
</li>
</ol>

<p>
I have two monitors at work and I set them up in XFCE according to
the website listed above.
</p>

<p>
I first entered the command <b>xrandr</b> in the terminal to determine
what the monitors were named. Next, I entered the following command
to enable the setting in which one monitor was continuation of
another.
</p>

<div class="highlight"><pre><span class="n">xrandr</span> <span class="o">--</span><span class="n">output</span> <span class="n">MONITOR1</span> <span class="o">--</span><span class="n">left</span><span class="o">-</span><span class="n">of</span> <span class="n">MONITOR2</span>
</pre></div>

<p>
The names MONITOR1 and 2 should be replaced with the names returned
from the xrandr command.
</p>

<p>
I also set this command to run at start up in <i>Applications -&gt;
Settings -&gt; Session and Startup</i>.
</p>

<hr  />
</div>
</div>
<div id="outline-container-sec-5-2" class="outline-3">
<h3 id="sec-5-2"><span class="section-number-3">5.2</span> Screen brightness</h3>
<div class="outline-text-3" id="text-5-2">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script">http://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script</a>
</li>
</ol>

<p>
I can also use <i>xrandr</i> to change the screen brightness. Simply use
the command <i>xrandr &#x2013;output DP-2 &#x2013;brightness 0.7</i> to set the
brightness to 70% of the monitor labeled DP-2. To find the monitor
labels, simply type <i>xrandr</i>.
</p>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Python setup</h2>
<div class="outline-text-2" id="text-6">
</div><div id="outline-container-sec-6-1" class="outline-3">
<h3 id="sec-6-1"><span class="section-number-3">6.1</span> Compiling Python 3.4</h3>
<div class="outline-text-3" id="text-6-1">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.linuxfromscratch.org/blfs/view/svn/general/python3.html">http://www.linuxfromscratch.org/blfs/view/svn/general/python3.html</a>
</li>
<li><a href="http://stackoverflow.com/questions/22592686/compiling-python-3-4-is-not-copying-pip">http://stackoverflow.com/questions/22592686/compiling-python-3-4-is-not-copying-pip</a>
</li>
</ol>

<p>
Note before compiling: the <b>libssl-dev</b> package should be installed
for pip to work, and <b>libsqlite3-dev</b> should be installed for
IPython History. <b>tk8.5</b> and <b>tk8.5-dev</b> should be installed if you
later want to use Tk in matplotlib. Finally, <b>libbz2-dev</b> should
already be installed to ensure that Python has access to the bz2
headers.
</p>

<p>
I installed Python 3.4 with the following commands:
</p>

<div class="highlight"><pre><span class="n">CXX</span><span class="p">=</span>&quot;<span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">g</span><span class="o">++</span>&quot; <span class="o">\./</span><span class="n">configure</span> <span class="o">--</span><span class="n">prefix</span><span class="p">=</span><span class="o">/</span><span class="n">usr</span> <span class="o">--</span><span class="n">enable</span><span class="o">-</span><span class="n">shared</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">system</span><span class="o">-</span><span class="n">expat</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">system</span><span class="o">-</span><span class="n">ffi</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">ensurepip</span><span class="p">=</span><span class="n">install</span>
<span class="n">make</span>
</pre></div>

<p>
Next, run the following commands as root:
</p>

<div class="highlight"><pre><span class="n">make</span> <span class="n">install</span>
<span class="n">chmod</span> <span class="o">-</span><span class="n">v</span> 755 <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libpython3</span><span class="p">.</span>4<span class="n">m</span><span class="p">.</span><span class="n">so</span>
<span class="n">chmod</span> <span class="o">-</span><span class="n">v</span> 755 <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libpython3</span><span class="p">.</span><span class="n">so</span>
</pre></div>

<p>
For the doc files, download the Python HTML documentation from
here: <a href="https://docs.python.org/3.4/download.html">https://docs.python.org/3.4/download.html</a>. Install it using:
</p>

<div class="highlight"><pre><span class="n">install</span> <span class="o">-</span><span class="n">v</span> <span class="o">-</span><span class="n">dm755</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">python</span><span class="o">-</span>3<span class="p">.</span>4<span class="p">.</span>0<span class="o">/</span><span class="n">html</span>
<span class="n">tar</span> <span class="o">--</span><span class="n">strip</span><span class="o">-</span><span class="n">components</span><span class="p">=</span>1 <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">same</span><span class="o">-</span><span class="n">owner</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">same</span><span class="o">-</span><span class="n">permissions</span> <span class="o">-</span><span class="n">C</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">doc</span><span class="o">/</span><span class="n">python</span><span class="o">-</span>3<span class="p">.</span>4<span class="p">.</span>0<span class="o">/</span><span class="n">html</span> <span class="o">-</span><span class="n">xvf</span> <span class="p">.</span><span class="o">./</span><span class="n">python</span><span class="o">-</span>3<span class="p">.</span>4<span class="p">.</span>0<span class="o">-</span><span class="n">docs</span><span class="o">-</span><span class="n">html</span><span class="p">.</span><span class="n">tar</span><span class="p">.</span><span class="n">bz2</span>
</pre></div>

<p>
In ~/.profile, add the line
<b>PYTHONDOCS="<i>usr/share/doc/python-3.4.0/html</i>"; export PYTHONDOCS</b>
to the bottom of the file to set the <b>PYTHONDOCS</b> environment
variable.
</p>

<p>
Finally, I removed <b>/usr/bin/python</b> and created a symbolic link to
Python3.4 so that it would run as the default:
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">rm</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">python</span>
<span class="n">sudo</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">python3</span><span class="p">.</span>4 <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">python</span>
</pre></div>

<hr  />
</div>
</div>

<div id="outline-container-sec-6-2" class="outline-3">
<h3 id="sec-6-2"><span class="section-number-3">6.2</span> Installing IPython 2.0</h3>
<div class="outline-text-3" id="text-6-2">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://ipython.org/install.html">http://ipython.org/install.html</a>
</li>
<li><a href="http://stackoverflow.com/questions/14173271/warning-ipython-history-requires-sqlite-your-history-will-not-be-saved">http://stackoverflow.com/questions/14173271/warning-ipython-history-requires-sqlite-your-history-will-not-be-saved</a>
</li>
</ol>

<p>
IPython 2.0 can be installed using pip. The command to run with
Python3 is actually <b>pip3</b>. Use the <b>[notebook]</b> option if you also
want to install the <a href="http://ipython.org/notebook.html">IPython notebook</a> as well.
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">pip3</span> <span class="n">install</span> <span class="n">ipython</span><span class="p">[</span><span class="n">notebook</span><span class="p">]</span>
</pre></div>

<p>
When I ran IPython the first time, I received the following
messages:
</p>

<div class="highlight"><pre><span class="n">WARNING</span><span class="o">:</span> <span class="n">IPython</span> <span class="n">History</span> <span class="n">requires</span> <span class="n">SQLite</span><span class="o">,</span> <span class="n">your</span> <span class="n">history</span> <span class="n">will</span> <span class="n">not</span> <span class="n">be</span> <span class="n">saved</span>
<span class="n">WARNING</span><span class="o">:</span> <span class="n">Readline</span> <span class="n">services</span> <span class="n">not</span> <span class="n">available</span> <span class="n">or</span> <span class="n">not</span> <span class="n">loaded</span><span class="o">.</span>
<span class="n">WARNING</span><span class="o">:</span> <span class="n">The</span> <span class="n">auto</span><span class="o">-</span><span class="n">indent</span> <span class="n">feature</span> <span class="n">requires</span> <span class="n">the</span> <span class="n">readline</span> <span class="n">library</span>
</pre></div>

<p>
I fixed the readline errors by running <b>sudo pip3 install
readline</b>. However, I had to rebuild Python3 with the package
<b>libsqlite3-dev</b> installed to get rid of the sqlite error.
</p>

<hr  />
</div>

<div id="outline-container-sec-6-2-1" class="outline-4">
<h4 id="sec-6-2-1"><span class="section-number-4">6.2.1</span> IPython Notebook</h4>
<div class="outline-text-4" id="text-6-2-1">
<p>
The IPython notebook required that I install <b>libzmq</b> with apt-get
and <b>pyzmq</b> with pip3.
</p>
<hr  />
</div>
</div>

<div id="outline-container-sec-6-2-2" class="outline-4">
<h4 id="sec-6-2-2"><span class="section-number-4">6.2.2</span> Fixing indentation errors</h4>
<div class="outline-text-4" id="text-6-2-2">
<p>
<i>Source</i>
</p>
<ol class="org-ol">
<li><a href="http://stackoverflow.com/questions/10920562/ipython-emacs-indentationerror">http://stackoverflow.com/questions/10920562/ipython-emacs-indentationerror</a>
</li>
</ol>

<p>
I've been receiving some indentation errors in IPython. These are
more-or-less fixed by turning off <b>autoindent</b> in IPython. To do
this, I first created the default IPython configuration files by
running
</p>

<div class="highlight"><pre><span class="n">ipython</span> <span class="n">profile</span> <span class="n">create</span>
</pre></div>

<p>
Following this, I edited
<b>~/.ipython/profile_default/ipython_config.py</b>. I uncommented the
line about <b>autoindent</b> and set the argument to <b>False</b>. This fixed
the indentation errors.
</p>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-6-3" class="outline-3">
<h3 id="sec-6-3"><span class="section-number-3">6.3</span> Installing Numpy 1.8.1, matplotlib 1.3.1, scipy 0.14, and Pillow 2.4.0</h3>
<div class="outline-text-3" id="text-6-3">
<p>
Numpy 1.8.1 can be installed with pip3. Before doing so, I first
ATLAS with <b>sudo apt-get install libatlas-base-dev</b>. Next, I
downloaded the Numpy source and unzipped it.
</p>

<p>
matplotlib and Pillow are also easily installed with pip3. Before
installing scipy, be sure that there is a Fortran compiler on your
system, such as <b>gfortran</b>.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-6-4" class="outline-3">
<h3 id="sec-6-4"><span class="section-number-3">6.4</span> Multiple IPython prompts at startup</h3>
<div class="outline-text-3" id="text-6-4">
<p>
The reasons for the multiple prompts appearing the start of Ipython
in emacs is given <a href="http://lists.gnu.org/archive/html/help-gnu-emacs/2014-05/msg00061.html">in this disccusion</a>.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-6-5" class="outline-3">
<h3 id="sec-6-5"><span class="section-number-3">6.5</span> Getting Tk and Latex support in Python</h3>
<div class="outline-text-3" id="text-6-5">
<p>
The first time I built Python, I did not have <b>tk8.5</b> or
<b>tk8.5-dev</b> installed. This prevented me from creating plots with
matplotlib. So, I recompiled Python after installing these
packages.
</p>

<p>
I believe that I will also have to rebuild matplotlib in the future
if I want Latex support.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-6-6" class="outline-3">
<h3 id="sec-6-6"><span class="section-number-3">6.6</span> Installing Jedi</h3>
<div class="outline-text-3" id="text-6-6">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://tkf.github.io/emacs-jedi/latest/">http://tkf.github.io/emacs-jedi/latest/</a>
</li>
<li><a href="https://github.com/davidhalter/jedi">https://github.com/davidhalter/jedi</a>
</li>
</ol>

<p>
Jedi is a Python autocomplete tool for emacs that I had some
trouble installing at first. In the end, I think the problem was
with an old version on the Maramelade emacs package server.
</p>

<p>
I first installed the following Python packages using pip3 like
normal: <i>sudo pip3 install &lt;PACKAGE&gt;</i>.
</p>

<ul class="org-ul">
<li>jedi
</li>
<li>epc
</li>
<li>virtualenv
</li>
<li>argparse (I'm not sure if this one's necessary; I saw it on a
forum when I was troubleh shooting.)
</li>
</ul>

<p>
This only installs the Jedi library for Python and a few other
Python modules. To install Jedi for emacs I used el-get since the
version it installed was up-to-date. (When I tried to install from
the Marmalade repo using package.el, the repository version was
0.1.2, but the current version of jedi is 0.2.0.) To install
el-get, I added the following lines to init.el:
</p>

<div class="highlight"><pre><span class="p">;</span> <span class="n">Standard</span> <span class="n">el</span><span class="o">-</span><span class="n">get</span> <span class="n">setup</span>
<span class="p">;</span> <span class="p">(</span><span class="n">See</span> <span class="n">also</span><span class="p">:</span> <span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">github</span><span class="p">.</span><span class="n">com</span><span class="o">/</span><span class="n">dimitri</span><span class="o">/</span><span class="n">el</span><span class="o">-</span><span class="n">get</span>#<span class="n">basic</span><span class="o">-</span><span class="n">setup</span><span class="p">)</span>
<span class="p">(</span><span class="n">add</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">list</span> <span class="s">&#39;load-path &quot;~/.emacs.d/el-get/el-get&quot;)</span>

<span class="s">(unless (require &#39;</span><span class="n">el</span><span class="o">-</span><span class="n">get</span> <span class="n">nil</span> <span class="s">&#39;noerror)</span>
<span class="s">  (with-current-buffer</span>
<span class="s">      (url-retrieve-synchronously</span>
<span class="s">       &quot;https://raw.github.com/dimitri/el-get/master/el-get-install.el&quot;)</span>
<span class="s">    (goto-char (point-max))</span>
<span class="s">    (eval-print-last-sexp)))</span>

<span class="s">(el-get &#39;</span><span class="n">sync</span><span class="p">)</span>
</pre></div>

<p>
Next, I ran init.el using <i>M-x load-file</i>. I watched the <b>Messages</b>
buffer during this time to watch for when the el-get install
finished (it takes a few minutes). After it had installed and I
restarted emacs for good measure, I ran the command <i>M-x
el-get-install RET jedi RET</i>. Again, I waited until it finished,
then ran the command <i>M-x jedi:install-server RET</i>. This command is
missing in 0.1.2.
</p>

<p>
Finally, I added the following lines to init.el, restarted emacs,
and had a working jedi install.
</p>

<div class="highlight"><pre><span class="p">;;</span> <span class="n">Standard</span> <span class="n">Jedi</span><span class="p">.</span><span class="n">el</span> <span class="n">setting</span>
<span class="p">(</span><span class="n">add</span><span class="o">-</span><span class="n">hook</span> <span class="s">&#39;python-mode-hook &#39;</span><span class="n">jedi</span><span class="p">:</span><span class="n">setup</span><span class="p">)</span>
<span class="p">(</span><span class="n">setq</span> <span class="n">jedi</span><span class="p">:</span><span class="n">complete</span><span class="o">-</span><span class="n">on</span><span class="o">-</span><span class="nb">dot</span> <span class="n">t</span><span class="p">)</span>
</pre></div>

<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> Org-mode configuration</h2>
<div class="outline-text-2" id="text-7">
</div><div id="outline-container-sec-7-1" class="outline-3">
<h3 id="sec-7-1"><span class="section-number-3">7.1</span> Publish to LaTeX with references</h3>
<div class="outline-text-3" id="text-7-1">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://tex.stackexchange.com/questions/197707/using-bibtex-from-org-mode-bbl-and-aux-files-are-incorrectly-generated">http://tex.stackexchange.com/questions/197707/using-bibtex-from-org-mode-bbl-and-aux-files-are-incorrectly-generated</a>
</li>
</ol>

<p>
I found a recent and excellent post to the TeX Stack Exchange
concerning getting org-mode to faithfully create bibliographies in
pdf's published from LaTeX. This task has been notoriously
difficult for me in the past.
</p>

<p>
In brief, I installed the texlive-bibtex-extra and latexmk packages
from the Debian repositories to assemble my tools. Next, I used the
minimal example from the Stack Exchange link and modified it
slightly:
</p>

<div class="highlight"><pre><span class="c">#+LATEX_HEADER: \usepackage{fullpage}</span>
<span class="c">#+LATEX_HEADER: \usepackage[backend=bibtex,sorting=none]{biblatex}</span>
<span class="c">#+LATEX_HEADER: \usepackage{hyperref}</span>
<span class="c">#+LATEX_HEADER: \addbibresource{telomeres.bib}</span>

<span class="c">#+TITLE: Telomere Master Notes</span>
<span class="c">#+AUTHOR: Kyle M. Douglass</span>
<span class="c">#+DATE: \today</span>

<span class="n">Telomeres</span> <span class="n">consist</span> <span class="n">of</span> <span class="n">DNA</span> <span class="n">tandem</span> <span class="n">repeat</span> <span class="n">sequences</span><span class="p">,</span> <span class="n">their</span> <span class="n">associated</span>
<span class="n">binding</span> <span class="n">proteins</span><span class="p">,</span> <span class="nb">and</span> <span class="n">a</span> <span class="n">non</span><span class="o">-</span><span class="n">coding</span> <span class="n">RNA</span> <span class="n">transcript</span><span class="p">.</span> <span class="n">They</span> <span class="n">are</span> <span class="n">located</span> <span class="n">at</span>
<span class="n">the</span> <span class="k">end</span> <span class="n">of</span> <span class="n">chromosomes</span> <span class="nb">and</span> <span class="n">address</span> <span class="n">two</span> <span class="n">important</span> <span class="n">problems</span> <span class="n">in</span>
<span class="n">eukaryotes</span><span class="p">:</span> <span class="n">the</span> <span class="k">end</span><span class="o">-</span><span class="n">replication</span> <span class="n">problem</span> <span class="nb">and</span> <span class="n">the</span> <span class="k">end</span><span class="o">-</span><span class="n">protection</span>
<span class="n">problem</span><span class="p">.</span> <span class="n">A</span> <span class="n">nice</span> <span class="n">summary</span> <span class="n">is</span> <span class="n">provided</span> <span class="n">in</span> <span class="o">\</span><span class="n">cite</span><span class="p">{</span><span class="n">sfeir</span><span class="o">-</span><span class="n">jcellsci</span><span class="o">-</span>2012<span class="p">}.</span>

<span class="o">\</span><span class="n">printbibliography</span>
</pre></div>

<p>
Finally, I changed my original init.el file by modifying
<b>org-latex-pdf-process</b> to the following:
</p>

<div class="highlight"><pre><span class="p">(</span><span class="n">setq</span> <span class="n">org</span><span class="o">-</span><span class="n">latex</span><span class="o">-</span><span class="n">pdf</span><span class="o">-</span><span class="n">process</span>
  <span class="s">&#39;(&quot;latexmk -pdflatex=&#39;</span><span class="n">pdflatex</span> <span class="o">-</span><span class="n">interaction</span> <span class="n">nonstopmode</span><span class="o">&#39;</span> <span class="o">-</span><span class="n">pdf</span> <span class="o">-</span><span class="n">bibtex</span> <span class="o">-</span><span class="n">f</span> <span class="c">%f&quot;))</span>
</pre></div>

<p>
This was changed from what I had used in the past:
</p>

<div class="highlight"><pre><span class="p">(</span><span class="n">setq</span> <span class="n">org</span><span class="o">-</span><span class="n">latex</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">pdf</span><span class="o">-</span><span class="n">process</span> <span class="s">&#39;</span><span class="err">(&quot;pdflatex -interaction nonstopmode %b&quot;</span>
				 &quot;<span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">bibtex</span> <span class="c">%b&quot;</span>
				 &quot;<span class="n">pdflatex</span> <span class="o">-</span><span class="n">interaction</span> <span class="n">nonstopmode</span> <span class="c">%b&quot;</span>
				 &quot;<span class="n">pdflatex</span> <span class="o">-</span><span class="n">interaction</span> <span class="n">nonstopmode</span> <span class="c">%b&quot;))</span>
</pre></div>

<p>
Now, publishing to pdf with Latex and including citations works
well.
</p>
<hr  />
</div>
</div>
</div>

<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> CIFS</h2>
<div class="outline-text-2" id="text-8">
<p>
I use CIFS to access my network shares at work, some of which come
from Windows servers.
</p>
</div>

<div id="outline-container-sec-8-1" class="outline-3">
<h3 id="sec-8-1"><span class="section-number-3">8.1</span> CIFS installation</h3>
<div class="outline-text-3" id="text-8-1">
<p>
It's easy. <i>sudo apt-get install cifs-utils</i>
</p>
<hr  />
</div>
</div>

<div id="outline-container-sec-8-2" class="outline-3">
<h3 id="sec-8-2"><span class="section-number-3">8.2</span> Accessing Windows shares remotely</h3>
<div class="outline-text-3" id="text-8-2">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="https://wiki.ubuntu.com/MountWindowsSharesPermanently">https://wiki.ubuntu.com/MountWindowsSharesPermanently</a>
</li>
</ol>

<p>
First, I created a credentials file with my Windows username and
password called <b>~/.smbcredentials</b>. It contained the lines
</p>

<div class="highlight"><pre><span class="n">username</span><span class="p">=</span><span class="n">USERNAME</span>
<span class="n">password</span><span class="p">=</span><span class="n">PASSWORD</span>
</pre></div>

<p>
with the obvious substitutions. I changed the read/write
credentials using <b>chmod 600 ~/.smbcredentials</b>.
</p>

<p>
Next, I created a mount point for the network share at
<b>/mnt/LEB-Z</b>. I then added the following line to <b>/etc/fstab</b>
</p>

<div class="highlight"><pre><span class="c1">//SERVERIP/LEB /mnt/LEB-Z cifs credentials=/home/kmdouglass/.smbcredentials,iocharset=utf8,sec=ntlm,noauto 0 0</span>
</pre></div>

<p>
The <b>noauto</b> parameter ensures that the share is not mounted at
startup or with the <b>sudo mount -a</b> command. To mount the share, I
enter the command <b>sudo mount /mnt/LEB-Z</b>.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-8-3" class="outline-3">
<h3 id="sec-8-3"><span class="section-number-3">8.3</span> fstab options for mounting shares as a user</h3>
<div class="outline-text-3" id="text-8-3">
<p>
The method described above will mount the CIFS share as root, which
means you're user account won't be able to access the files and
directories.
</p>

<p>
To get around this, I modified the fstab line as such:
</p>

<div class="highlight"><pre><span class="c1">//SERVERIP/LEB /mnt/LEB-Z cifs credentials=/home/kmdouglass/.smbcredentials,iocharset=utf8,sec=ntlm,uid=1000,gid=1000,noauto 0 0</span>
</pre></div>

<p>
UID and GID are user and group id numbers for the user of
interest. These can be obtained with <b>id -u username</b> and <b>id -g
username</b>.
</p>

<p>
After mounting the share, the ownership still needs to be
changed. This is done with the command
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">chown</span> <span class="o">-</span><span class="n">R</span> <span class="n">user</span><span class="p">:</span><span class="n">user</span> <span class="o">/</span><span class="n">mnt</span><span class="o">/</span><span class="n">LEB</span><span class="o">-</span><span class="n">Z</span>
</pre></div>

<p>
where user is the username that belongs to the UID.
</p>

<hr  />
</div>
</div>
</div>
<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> Booting from a bootloader on a USB stick</h2>
<div class="outline-text-2" id="text-9">
<p>
I ran into some issues installing Debian on my work computer, which,
I suspect, was due to a crazy partition scheme. I inherited this
computer from someone else and can't change the harddrive layout, so
I've been attempting to work around it.
</p>

<p>
Luckily, there was a 500 GB chunk of free space at the end of one
hard drive, so I decided to install Debian Wheezy there. I booted
into a Live CD and ran the installer. Unfortunately, the install
hung while searching for the other operating systems on the computer
to setup Grub. So after waiting an hour, I manually restarted the
computer.
</p>

<p>
Fortunately, the MBR was untouched so the computer started as if
nothing had ever happened to it. Windows also worked fine. I could
also see what appeared to be the full file system for Debian
installed at the parition I put it in. Rather than risk botching the
MBR, I thought I would try installing <a href="http://www.gnu.org/software/grub/">GRUB</a> onto a USB stick and
using it to boot to the new installation.
</p>

<hr  />
</div>

<div id="outline-container-sec-9-1" class="outline-3">
<h3 id="sec-9-1"><span class="section-number-3">9.1</span> Installing GRUB onto a USB stick</h3>
<div class="outline-text-3" id="text-9-1">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://www.pendrivelinux.com/install-grub2-on-usb-from-ubuntu-linux/">http://www.pendrivelinux.com/install-grub2-on-usb-from-ubuntu-linux/</a>
</li>
<li><a href="http://www.dedoimedo.com/computers/grub-2.html">http://www.dedoimedo.com/computers/grub-2.html</a>
</li>
<li><a href="http://current.workingdirectory.net/posts/2009/grub-on-usb/">http://current.workingdirectory.net/posts/2009/grub-on-usb/</a>
</li>
</ol>

<p>
I first booted into Linux with my Debian Live CD. After inserting a
spare USB stick, I loaded a terminal window and typed <b>sudo su</b> to
get a root prompt. Next, I checked which device the USB stick was
labeled as by inspecting the output of <b>fdisk -l</b>. I mounted the
stick with <b>mkdir /mnt/USB &amp;&amp; mount /dev/sdX /mnt/USB</b>. (Replace
'X' with the device label, usually a letter and a number).
</p>

<p>
Next, I installed GRUB to the MBR of this USB stick by typing this
important command:
</p>

<div class="highlight"><pre><span class="n">grub</span><span class="o">-</span><span class="n">install</span> <span class="o">--</span><span class="n">force</span> <span class="o">--</span><span class="n">no</span><span class="o">-</span><span class="n">floppy</span> <span class="o">--</span><span class="n">boot</span><span class="o">-</span><span class="n">directory</span><span class="p">=</span><span class="o">/</span><span class="n">mnt</span><span class="o">/</span><span class="n">USB</span><span class="o">/</span><span class="n">boot</span> <span class="o">/</span><span class="n">dev</span><span class="o">/</span><span class="n">sdX</span>
</pre></div>

<p>
(Again, X should be replaced with the appropriate device label.)
This installed GRUB to the USB for what would be the live
system. The next step involves configuring GRUB to boot the
stranded Linux install.
</p>

<hr  />
</div>
</div>

<div id="outline-container-sec-9-2" class="outline-3">
<h3 id="sec-9-2"><span class="section-number-3">9.2</span> Configuring GRUB on the USB stick to work with your machine</h3>
<div class="outline-text-3" id="text-9-2">
<p>
<i>Sources</i>
</p>
<ol class="org-ol">
<li><a href="http://askubuntu.com/questions/145241/how-do-i-run-update-grub-from-a-livecd">http://askubuntu.com/questions/145241/how-do-i-run-update-grub-from-a-livecd</a>
</li>
</ol>

<p>
After installing GRUB to the USB stick, it's necessary to change
/boot/grub/grub.cfg on the USB to reflect your machine's
hardware. This is made easy with the command <b>grub-update</b> and a
Live CD.
</p>

<p>
After booting into the live CD environment, I mounted the stranded
partition to /mnt/linux. Next, I loaded some necessary directories
from the running live instances into the newly mounted partition.
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">mount</span> <span class="o">--</span><span class="n">bind</span> <span class="o">/</span><span class="n">dev</span> <span class="o">/</span><span class="n">mnt</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">dev</span>
<span class="n">sudo</span> <span class="n">mount</span> <span class="o">--</span><span class="n">bind</span> <span class="o">/</span><span class="n">sys</span> <span class="o">/</span><span class="n">mnt</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">sys</span>
<span class="n">sudo</span> <span class="n">mount</span> <span class="o">--</span><span class="n">bind</span> <span class="o">/</span><span class="n">proc</span> <span class="o">/</span><span class="n">mnt</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">proc</span>
</pre></div>

<p>
Next I <b>chroot</b>'ed into the partition with <b>sudo chroot
/mnt/linux</b>. I next ran
</p>

<div class="highlight"><pre><span class="n">sudo</span> <span class="n">update</span><span class="o">-</span><span class="n">grub</span>
</pre></div>

<p>
which generated the grub.cfg file on the current partition. I
copied this to /boot/grub in my USB stick, rebooted the computer,
and successfully loaded the stranded partition from the bootloader
on the USB stick.
</p>
</div>
</div>
</div>
